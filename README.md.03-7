#devops-netology
03-sysadmin-07-net

1. На лекции мы обсудили, что манипулировать размером окна необходимо для эффективного наполнения приемного буфера участников TCP сессии (Flow Control). Подобная проблема в полной мере возникает в сетях с высоким RTT. Например, если вы захотите передать 500 Гб бэкап из региона Юга-Восточной Азии на Восточное побережье США. Здесь вы можете увидеть и 200 и 400 мс вполне реального RTT. Подсчитайте, какого размера нужно окно TCP чтобы наполнить 1 Гбит/с канал при 300 мс RTT (берем простую ситуацию без потери пакетов). Можно воспользоваться готовым калькулятором. Ознакомиться с формулами, по которым работает калькулятор можно, например, на Wiki.

Ответ:network limit (MSS 3750 byte, RTT: 300.0 ms, Loss: 10-08 (10-06%)) : 1000.00 Mbit/sec.

2. Во сколько раз упадет пропускная способность канала, если будет 1% потерь пакетов при передаче?

Ответ:network limit (MSS 3750 byte, RTT: 300.0 ms, Loss: 1%) : 1.00 Mbit/sec.
То есть, пропускная способность при 1% потерь упадет в 1000 раз.

3. Какая максимальная реальная скорость передачи данных достижима при линке 100 Мбит/с? Вопрос про TCP payload, то есть цифры, которые вы реально увидите в операционной системе в тестах или в браузере при скачивании файлов. Повлияет ли размер фрейма на это?

Ответ:Канал 100 Мбит/сек позволяет достичь передачи данных примерно до 12,5 Мбайт/сек. При этом чем больше размер фрейма, тем выше скорость. Поскольку каждый фрейм содержит tcp-header, помимно payload, при уменьшении размера количество пакетов увеличится, и часть канала будет занята передачей tcp-header-а.

4. Что на самом деле происходит, когда вы открываете сайт? :) На прошлой лекции был приведен сокращенный вариант ответа на этот вопрос. Теперь вы знаете намного больше, в частности про IP адресацию, DNS и т.д. Опишите максимально подробно насколько вы это можете сделать, что происходит, когда вы делаете запрос curl -I http://netology.ru с вашей рабочей станции. Предположим, что arp кеш очищен, в локальном DNS нет закешированных записей.

Ответ:при запросе curl -I http://netology.ru для получения странички с указанного адреса сначала формируется запрос для резолва dns-адреса netology.ru к серверу, адрес которого настроен на сетевом интерфейсе. Локальный ДНС перенаправляет на корневые серверы, далее на сервры зоны RU, далее на серверы нетологии, откуда должен разрешиться айпи сервера. Заметим, что где это необходимо, используется ARP-протокол для сопоставления мак и айпи адресов нужных хостов в локальной сети.
Ну и после получения айпи адреса netology.ru уже запрашивается страница по 80 порту через протокол HTTP.

5. Сколько и каких итеративных запросов будет сделано при резолве домена www.google.co.uk?

Ответ: запрос на локальный ДНС, перенарпавление на корневой ДНС, перенаправление на UK, перенаправление на CO.UK, перенаправление на хост google.co.uk, резолвинг ip хоста. итого 5 запросов.

6. Сколько доступно для назначения хостам адресов в подсети /25? А в подсети с маской 255.248.0.0. Постарайтесь потренироваться в ручных вычислениях чтобы немного набить руку, не пользоваться калькулятором сразу.

Ответ: 25 маска – 126 адресов, 255.248.0.0 – маска 13, 524286 адресов.

7. В какой подсети больше адресов, в /23 или /24?

Ответ: в сети 24 - 254 адреса, это вдвое меньше чем в 23 - 510 адресов.

8. Получится ли разделить диапазон 10.0.0.0/8 на 128 подсетей по 131070 адресов в каждой? Какая маска будет у таких подсетей?

Ответ: да, 128 подсетей с маской /15.
